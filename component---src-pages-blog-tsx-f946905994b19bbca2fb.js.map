{"version":3,"file":"component---src-pages-blog-tsx-f946905994b19bbca2fb.js","mappings":"yIAAA,IAEMA,EAAiB,IAAIC,KAAKC,eAAe,qBAF/B,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAG1CC,EAAa,SAACC,GACzB,OAAOP,EAAeQ,OAAO,IAAIC,KAAKF,M,iGCE3BG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAQG,KAChB,2BAASC,UAAU,mIAChBJ,EAAQK,eACP,uBAAKD,UAAU,0BACb,0BAAQA,UAAU,oDAChB,gBAAC,IAAD,CACEE,MAAON,EAAQK,cAAcE,KAAKC,UAAUC,gBAAgBC,gBAC5DC,IAAKX,EAAQY,MACbC,iBAAA,MAKR,uBAAKT,UAAU,gBACb,uBAAKA,UAAU,mBAEb,uBAAKA,UAAU,2CACb,iCAAQT,EAAAA,EAAAA,GAAWK,EAAQJ,QAG7B,2BACE,sBAAIQ,UAAU,oBAAoBJ,EAAQY,QAG3CZ,EAAQc,SACP,uBAAKC,wBAAyB,CAAEC,OAAQhB,EAAQc,SAAWV,UAAU,8B,mEChCtEa,EAAsG,SAAC,GAG7G,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEA,OACE,uBAAKf,UAAU,kBACb,sBAAIA,UAAU,iDACZ,0BACE,qBAAGgB,KAAK,KAAR,SAEDF,GACCA,EAAYG,KAAI,SAAAC,GAAU,OACxB,sBAAIC,IAAKD,EAAWV,OAClB,qBAAGQ,KAAME,EAAWF,MAAOE,EAAWV,WAG3CO,GACC,0BACE,4BAAOA,Q,uFCfNK,EAAY,WACvB,OAAsCC,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YACtB,OACE,2BAASvB,UAAU,2DACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,0BAA0BwB,EAAAA,GAAAA,WACzC,2BAAMA,EAAAA,GAAAA,MAEN,uBAAKxB,UAAU,aACb,wBAAMyB,SAAUH,GACd,uBAAKtB,UAAU,+BAA+B0B,gBAAA,GAC5C,uBAAK1B,UAAU,kCACb,uBAAKA,UAAU,0BACb,wBAAMA,UAAU,eAAe2B,eAAa,SAC5C,yBACEC,KAAK,QACLC,SAAUN,EACVO,YAAaN,EAAAA,GAAAA,UACbxB,UAAU,eAIhB,2BACE,0BAAQA,UAAU,+BAA+BwB,EAAAA,GAAAA,iB,kFCQnE,UA7BiB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KAIlB,OACE,gBAAC,IAAD,CAAQC,IAJE,CACVxB,MAAO,WAIL,2BAASR,UAAU,qCACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,oCAAoC0B,gBAAA,GACjD,gBAAC,IAAD,CAAYX,YAAY,WACxB,uBAAKf,UAAU,iBAAiB0B,gBAAA,GAC9B,2BAAS1B,UAAU,kCACjB,uBAAKA,UAAU,oCAAoCiC,eAAA,GAChDF,EAAKG,KAAKC,MAAMlB,KAAI,SAAArB,GAAO,OAC1B,gBAAC,IAAD,CAAauB,IAAKvB,EAAQwC,GAAIxC,QAASA,aAUrD,gBAAC,IAAD","sources":["webpack://ahanbama/./src/_utils/fortmatDate.ts","webpack://ahanbama/./src/components/Blog/Article.tsx","webpack://ahanbama/./src/components/Breadcrumb.tsx","webpack://ahanbama/./src/components/Index/Subscribe.tsx","webpack://ahanbama/./src/pages/blog.tsx"],"sourcesContent":["const options = { year: 'numeric', month: 'long', day: 'numeric' } as Intl.DateTimeFormatOptions;\n\nconst IntlFormatDate = new Intl.DateTimeFormat('fa-IR-u-ca-persian', options);\nexport const formatDate = (date: number | Date) => {\n  return IntlFormatDate.format(new Date(date));\n};\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n//import Img from 'gatsby-image';\nimport { GatsbyImage as Img } from 'gatsby-plugin-image';\nimport { formatDate } from '~src/_utils/fortmatDate';\n\nexport const ArticleCard = ({ article }) => {\n  return (\n    <Link to={article.uri}>\n      <article className=\"uk-card uk-card-default uk-card-small uk-article uk-overflow-hidden uk-box-shadow-hover-large uk-height-1-1 tm-ignore-container\">\n        {article.featuredImage && (\n          <div className=\"tm-ratio tm-ratio-16-9\">\n            <figure className=\"tm-media-box uk-cover-container uk-margin-remove\">\n              <Img\n                image={article.featuredImage.node.localFile.childImageSharp.gatsbyImageData}\n                alt={article.title}\n                data-uk-cover\n              />\n            </figure>\n          </div>\n        )}\n        <div className=\"uk-card-body\">\n          <div className=\"uk-article-body\">\n            {/* Date */}\n            <div className=\"uk-article-meta uk-margin-xsmall-bottom\">\n              <time> {formatDate(article.date)}</time>\n            </div>\n            {/* Title */}\n            <div>\n              <h3 className=\"uk-margin-remove\">{article.title}</h3>\n            </div>\n            {/* Desc */}\n            {article.excerpt && (\n              <div dangerouslySetInnerHTML={{ __html: article.excerpt }} className=\"uk-margin-small-top\"></div>\n            )}\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n};\n","import * as React from \"react\"\nexport const Breadcrumb: React.FC<{ breadcrumbs?: Array<{ title: string; href: string }>; currentPage: string }> = ({\n  breadcrumbs,\n  currentPage,\n}) => {\n  return (\n    <div className=\"uk-text-center\">\n      <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\n        <li>\n          <a href=\"/\">خانه</a>\n        </li>\n        {breadcrumbs &&\n          breadcrumbs.map(breadcrumb => (\n            <li key={breadcrumb.title}>\n              <a href={breadcrumb.href}>{breadcrumb.title}</a>\n            </li>\n          ))}\n        {currentPage && (\n          <li>\n            <span>{currentPage}</span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { subscription } from '~src/_data/general';\nimport { useSubscribe } from '~src/context/Hooks/useSubscribe';\n\nexport const Subscribe = () => {\n  const { handleSubmit, handleEmail } = useSubscribe();\n  return (\n    <section className=\"uk-section uk-section-primary uk-section-small uk-light\">\n      <div className=\"uk-container\">\n        <div className=\"uk-text-center\">\n          <div className=\"uk-h2 uk-margin-remove\">{subscription.subscribe}</div>\n          <div>{subscription.text}</div>\n\n          <div className=\"uk-margin\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"uk-grid-small uk-flex-center\" data-uk-grid>\n                <div className=\"uk-width-1-1 uk-width-medium@s\">\n                  <div className=\"uk-inline uk-width-1-1\">\n                    <span className=\"uk-form-icon\" data-uk-icon=\"mail\"></span>\n                    <input\n                      type=\"email\"\n                      onChange={handleEmail}\n                      placeholder={subscription.enterMail}\n                      className=\"uk-input\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <button className=\"uk-button uk-button-primary\">{subscription.button}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Layout } from '../context/Layout';\nimport { ArticleCard } from '~src/components/Blog/Article';\nimport { Subscribe } from '~src/components/Index/Subscribe';\nimport { Breadcrumb } from '~src/components/Breadcrumb';\n\nconst BlogPage = ({ data }) => {\n  const seo = {\n    title: 'مقالات',\n  };\n  return (\n    <Layout seo={seo}>\n      <section className=\"uk-section-muted uk-section-small\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid-medium uk-child-width-1-1\" data-uk-grid>\n            <Breadcrumb currentPage=\"مقالات\" />\n            <div className=\"uk-grid-medium\" data-uk-grid>\n              <section className=\"uk-width-1-1 uk-width-expand@m\">\n                <div className=\"uk-grid-medium uk-child-width-1-1\" datauk-grid>\n                  {data.blog.nodes.map(article => (\n                    <ArticleCard key={article.id} article={article} />\n                  ))}\n                </div>\n              </section>\n              {/* \n        <aside className=\"uk-width-1-4 uk-visible@m tm-aside-column\"></aside> */}\n            </div>\n          </div>\n        </div>\n      </section>\n      <Subscribe />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\nexport const query = graphql`\n  query BlogPageQuery {\n    blog: allWpPost(\n      limit: 20\n      sort: { fields: date, order: DESC }\n      filter: { categories: { nodes: { elemMatch: { id: { eq: \"dGVybToyODE=\" } } } } }\n    ) {\n      nodes {\n        id\n        title\n        date\n        excerpt\n        uri\n        featuredImage {\n          node {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["IntlFormatDate","Intl","DateTimeFormat","year","month","day","formatDate","date","format","Date","ArticleCard","article","Link","to","uri","className","featuredImage","image","node","localFile","childImageSharp","gatsbyImageData","alt","title","data-uk-cover","excerpt","dangerouslySetInnerHTML","__html","Breadcrumb","breadcrumbs","currentPage","href","map","breadcrumb","key","Subscribe","useSubscribe","handleSubmit","handleEmail","subscription","onSubmit","data-uk-grid","data-uk-icon","type","onChange","placeholder","data","seo","datauk-grid","blog","nodes","id"],"sourceRoot":""}