{"version":3,"file":"component---src-pages-news-tsx-84499870f01ec8a05277.js","mappings":"yIAAA,IAEMA,EAAiB,IAAIC,KAAKC,eAAe,qBAF/B,CAAEC,KAAM,UAAWC,MAAO,OAAQC,IAAK,YAG1CC,EAAa,SAACC,GACzB,OAAOP,EAAeQ,OAAO,IAAIC,KAAKF,M,mECH3BG,EAAsG,SAAC,GAG7G,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEA,OACE,uBAAKC,UAAU,kBACb,sBAAIA,UAAU,iDACZ,0BACE,qBAAGC,KAAK,KAAR,SAEDH,GACCA,EAAYI,KAAI,SAAAC,GAAU,OACxB,sBAAIC,IAAKD,EAAWE,OAClB,qBAAGJ,KAAME,EAAWF,MAAOE,EAAWE,WAG3CN,GACC,0BACE,4BAAOA,Q,uFCfNO,EAAY,WACvB,OAAsCC,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,YACtB,OACE,2BAAST,UAAU,2DACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,0BAA0BU,EAAAA,GAAAA,WACzC,2BAAMA,EAAAA,GAAAA,MAEN,uBAAKV,UAAU,aACb,wBAAMW,SAAUH,GACd,uBAAKR,UAAU,+BAA+BY,gBAAA,GAC5C,uBAAKZ,UAAU,kCACb,uBAAKA,UAAU,0BACb,wBAAMA,UAAU,eAAea,eAAa,SAC5C,yBACEC,KAAK,QACLC,SAAUN,EACVO,YAAaN,EAAAA,GAAAA,UACbV,UAAU,eAIhB,2BACE,0BAAQA,UAAU,+BAA+BU,EAAAA,GAAAA,iB,2FCgCnE,UArDiB,SAAC,GAAc,IAAZO,EAAW,EAAXA,KAIlB,OACE,gBAAC,IAAD,CAAQC,IAJE,CACVb,MAAO,UAIL,2BAASL,UAAU,qCACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,oCAAoCY,gBAAA,GACjD,gBAAC,IAAD,CAAYb,YAAY,UACxB,uBAAKC,UAAU,iBAAiBY,gBAAA,GAC9B,2BAASZ,UAAU,kCACjB,2BAASA,UAAU,0EACjB,sBAAIA,UAAU,yCACXiB,EAAKE,KAAKC,MAAMlB,KAAI,SAAAmB,GAAO,OAC1B,uBAAKjB,IAAKiB,EAAQC,IAChB,0BACE,2BAAStB,UAAU,cACjB,uBAAKA,UAAU,mBACb,uBAAKA,UAAU,2CACb,6BAAOP,EAAAA,EAAAA,GAAW4B,EAAQ3B,QAG5B,2BACE,0BACE,gBAAC,EAAA6B,KAAD,CAAMvB,UAAU,kBAAkBwB,GAAIH,EAAQI,KAC3CJ,EAAQhB,UAMjB,uBACEL,UAAU,sBACV0B,wBAAyB,CAAEC,OAAQN,EAAQO,wBAcnE,gBAAC,IAAD","sources":["webpack://ahanbama/./src/_utils/fortmatDate.ts","webpack://ahanbama/./src/components/Breadcrumb.tsx","webpack://ahanbama/./src/components/Index/Subscribe.tsx","webpack://ahanbama/./src/pages/news.tsx"],"sourcesContent":["const options = { year: 'numeric', month: 'long', day: 'numeric' } as Intl.DateTimeFormatOptions;\n\nconst IntlFormatDate = new Intl.DateTimeFormat('fa-IR-u-ca-persian', options);\nexport const formatDate = (date: number | Date) => {\n  return IntlFormatDate.format(new Date(date));\n};\n","import * as React from \"react\"\nexport const Breadcrumb: React.FC<{ breadcrumbs?: Array<{ title: string; href: string }>; currentPage: string }> = ({\n  breadcrumbs,\n  currentPage,\n}) => {\n  return (\n    <div className=\"uk-text-center\">\n      <ul className=\"uk-breadcrumb uk-flex-center uk-margin-remove\">\n        <li>\n          <a href=\"/\">خانه</a>\n        </li>\n        {breadcrumbs &&\n          breadcrumbs.map(breadcrumb => (\n            <li key={breadcrumb.title}>\n              <a href={breadcrumb.href}>{breadcrumb.title}</a>\n            </li>\n          ))}\n        {currentPage && (\n          <li>\n            <span>{currentPage}</span>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n","import * as React from 'react';\nimport { subscription } from '~src/_data/general';\nimport { useSubscribe } from '~src/context/Hooks/useSubscribe';\n\nexport const Subscribe = () => {\n  const { handleSubmit, handleEmail } = useSubscribe();\n  return (\n    <section className=\"uk-section uk-section-primary uk-section-small uk-light\">\n      <div className=\"uk-container\">\n        <div className=\"uk-text-center\">\n          <div className=\"uk-h2 uk-margin-remove\">{subscription.subscribe}</div>\n          <div>{subscription.text}</div>\n\n          <div className=\"uk-margin\">\n            <form onSubmit={handleSubmit}>\n              <div className=\"uk-grid-small uk-flex-center\" data-uk-grid>\n                <div className=\"uk-width-1-1 uk-width-medium@s\">\n                  <div className=\"uk-inline uk-width-1-1\">\n                    <span className=\"uk-form-icon\" data-uk-icon=\"mail\"></span>\n                    <input\n                      type=\"email\"\n                      onChange={handleEmail}\n                      placeholder={subscription.enterMail}\n                      className=\"uk-input\"\n                    />\n                  </div>\n                </div>\n                <div>\n                  <button className=\"uk-button uk-button-primary\">{subscription.button}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport { Layout } from '../context/Layout';\nimport { formatDate } from '~src/_utils/fortmatDate';\nimport { Subscribe } from '~src/components/Index/Subscribe';\nimport { Breadcrumb } from '~src/components/Breadcrumb';\n\nconst NewsPage = ({ data }) => {\n  const seo = {\n    title: 'اخبار',\n  };\n  return (\n    <Layout seo={seo}>\n      <section className=\"uk-section-muted uk-section-small\">\n        <div className=\"uk-container\">\n          <div className=\"uk-grid-medium uk-child-width-1-1\" data-uk-grid>\n            <Breadcrumb currentPage=\"اخبار\" />\n            <div className=\"uk-grid-medium\" data-uk-grid>\n              <section className=\"uk-width-1-1 uk-width-expand@m\">\n                <section className=\"uk-card uk-card-default uk-card-small uk-card-body tm-ignore-container\">\n                  <ul className=\"uk-list uk-list-large uk-list-divider\">\n                    {data.news.nodes.map(article => (\n                      <div key={article.id}>\n                        <li>\n                          <article className=\"uk-article\">\n                            <div className=\"uk-article-body\">\n                              <div className=\"uk-article-meta uk-margin-xsmall-bottom\">\n                                <time>{formatDate(article.date)}</time>\n                              </div>\n\n                              <div>\n                                <h3>\n                                  <Link className=\"uk-link-heading\" to={article.uri}>\n                                    {article.title}\n                                  </Link>\n                                </h3>\n                              </div>\n                            </div>\n\n                            <div\n                              className=\"uk-margin-small-top\"\n                              dangerouslySetInnerHTML={{ __html: article.excerpt }}></div>\n                          </article>\n                        </li>\n                      </div>\n                    ))}\n                  </ul>\n                </section>\n              </section>\n              {/* \n        <aside className=\"uk-width-1-4 uk-visible@m tm-aside-column\"></aside> */}\n            </div>\n          </div>\n        </div>\n      </section>\n      <Subscribe />\n    </Layout>\n  );\n};\n\nexport default NewsPage;\nexport const query = graphql`\n  query NewsPageQuery {\n    news: allWpPost(\n      limit: 20\n      sort: { fields: date, order: DESC }\n      filter: { categories: { nodes: { elemMatch: { id: { eq: \"dGVybToyNzc=\" } } } } }\n    ) {\n      nodes {\n        id\n        title\n        date\n        excerpt\n        uri\n        featuredImage {\n          node {\n            localFile {\n              childImageSharp {\n                gatsbyImageData(layout: CONSTRAINED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["IntlFormatDate","Intl","DateTimeFormat","year","month","day","formatDate","date","format","Date","Breadcrumb","breadcrumbs","currentPage","className","href","map","breadcrumb","key","title","Subscribe","useSubscribe","handleSubmit","handleEmail","subscription","onSubmit","data-uk-grid","data-uk-icon","type","onChange","placeholder","data","seo","news","nodes","article","id","Link","to","uri","dangerouslySetInnerHTML","__html","excerpt"],"sourceRoot":""}